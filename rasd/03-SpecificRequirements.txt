SPECIFIC REQUIREMENTS


EXTERNAL INTERFACE REQUIREMENTS
1. USER INTERFACES
        // mockups




HARDWARE INTERFACES
In order to retrieve data from the car’s sensors and in order to operate on the car’s actuators, the S2B shall interact with a software interface implemented on the vehicles: this software layer, in particular, shall receive the data from a low-level board that uses a CAN-bus, directly connected with the electronic hardware of the vehicles. Using the methods offered by this software interface, the S2B shall get all the desired data and control some functions of the vehicle. 
Further details about the design of the underneath software/hardware solution, however, are beyond the purposes of this document. It is noticeable, though, that similar solutions were already theorized.


SOFTWARE INTERFACES
The system will use the following external services to provide part of its functionalities:


* -Name : Google Maps
        -Mnemonic: MapsService
        -Source: https://developers.google.com/maps/
        -Purpose:
        


* -Name : -----
-Mnemonic: BillingService
-Source: -----
-Purpose:


MEMORY
For the web mobile application, the S2B shall require at least the necessary space on secondary memory for downloading and installing the PowerEnjoy app’s package on the customer’s smartphone. The estimation of the usage of the primary memory will not be part of this requirement document.


FUNCTIONAL REQUIREMENTS
* G1: Allow users to find available cars and reserve them
1. The system shall allow a user to find available cars starting from his GPS location only if his GPS location is inside the city area


1. The system shall allow a user to find available cars starting from a specified address inside the city area only if his GPS location is inside the city area


1. The system shall allow a user to reserve a car if and only if that car is available


1. The system shall not allow a user to make a car reservation if he has a car reservation not terminated yet


1. The system shall allow a user to login if and only if his provided credentials are correct


1. The system shall send an email with a unique PIN to a user at the end of his registration procedure


1.  The system shall guarantee that every user receives a unique PIN


1. The system shall not allow a guest to complete the registration if the email provided has already been used by a user


1. The system shall not allow a guest to complete the registration if he is not at least 18 years old


1. The system shall not allow a guest to complete the registration if he has provided an invalid payment method


1. The system shall guarantee that a car cannot be reserved at the same time by more than one user


* G2 : Allow users to use the reserved cars in the city
1. The system shall guarantee that a reserved car can be unlocked only by the user who made its last reservation and only if the unlock is requested within 10 meters from the current GPS position of that car.
        see RATIONALE 1


1. The system shall enable the ignition of the engine of a reserved car only after the successful insertion by the user of his PIN on the screen of that car


1. The system shall start charging a user for his car reservation with a given amount of money per minute when the engine of the car ignites for the first time during that reservation.
                see RATIONALE 2
                
1. The system shall display to the user the current charges of his reservation through the screen inside the car he reserved


1. The system shall set a reserved car as unavailable if its engine is not turned on within 20 minutes from the last unlocking of that car  or if the ride terminates with more 
than 80% of its battery empty
see RATIONALE 3


      6.    The system shall stop charging the user when a car is set as unavailable


1. The system shall detect when a car leaves or enters a safe area
see RATIONALE 4


1. The system shall expire the last eventual reservation of a car if that car is set as unavailable 
see RATIONALE 5


1. The system shall set a car as unavailable if the ride terminates with more 
than 80% of its battery empty or if a failure in that car occurs


1. The system shall stop charging money to the user when he exits properly from the car he has reserved, after having parked that car in a safe area and having managed to terminate the reservation with the pression of the button “Terminate reservation” on the screen of that car 


1. The system shall turn off the engine of a reserved car if the reservation of that car can terminate and the user presses either the "Terminate reservation" button or the “Make a Stop” button on the screen of that car
        see RATIONALE 6
        
1. The system shall set a reserved car as available when the user parks that car in a safe area, presses the button “Terminate Reservation” and exits properly from that car. 
                
V2: The system shall set a reserved car as available when the user exits properly from that car, after having parked that car in a safe area and having managed to terminate the reservation with the pression of the button “Terminate reservation” on the screen of that car 
        


1.  The system shall lock a car once the user exits properly from that car after 
  having communicated his will to end the reservation or to make a stop


1. The system shall set a car as unavailable when a user parks that car and doesn't exit properly from that car, preventing its lock.    DA SISTEMARE, MANCA IL FATTO CHE PREME SOSTA O TERMINA CON SUCCESSO


1. The system shall be able to locate every car of the company


1. The system shall be able to check and set the status of every car of the company


1. The system shall not allow a user to make a car stop inside a safe area or outside the city area
                see RATIONALE 7


1. The system shall guarantee that, when a car is set as unavailable, an operator can see that car on his mobile application and set that car as under maintenance


1. The system shall guarantee that, when a car is set as under maintenance by an operator, he provides to fix it and set it as available when he is done


1. The system shall guarantee that an operator can set as under maintenance at most one unavailable car at a time


* G3:  Guarantee a uniform distribution of the cars in the city
1. The system shall incentivize a user who shares the car he reserved with other passengers by applying a discount of 10% on the last ride if he has picked up at least two other passengers during the last ride and those passengers have stayed on the car for at least 50% of the total time of the ride
                see RATIONALE 8
        
1. The system shall be able to query the sensors in a car in order to get informations about the presence and number of passengers in that car


1. The system shall implement a money saving option in which the user inserts his destination on the screen of the car and the system shows on that screen the safe area or power safe area where to leave that car in order to get a discount


* G4 : Incentivize users to use properly the reserved cars
1. The system shall apply a discount of 20% on the last ride to users leaving after the ride more than 50% of the battery in the reserved car


1. The system shall apply a discount of 30% on the last ride to users who leave the reserved car in a power station and plug it


1. The system shall charge 30% more on the last ride to users who leave the car more than 3 km from the nearest power grid station or with more than 80% of the battery empty


1. The system shall guarantee that if a user doesn’t unlock for the first time the car he reserved within 1 hour from his reservation, that reservation expires


1. The system shall guarantee that if a user doesn’t unlock for the first time the car he reserved within 1 hour from his reservation, a fee of 1 EUR is accounted to that user


              7.   The system shall guarantee that if a user doesn’t unlock for the first time the 
            car he reserved within 1 hour from his reservation, that car is set as 
available


1. The system shall notify the user when the battery of the reserved car he is using is less than or equal to 15%
                see RATIONALE 9


REQUIREMENTS RATIONALES:
* [RA1] We think that 10 meters is a good distance, otherwise a user can 
potentially unlock the car he reserved far away from the car position and someone else may enter in that car in the meanwhile.


* [RA2] We specified “for the first time” since it can happen that the engine turns off 
during the car ride and the user may have to turn it on manually again. We 
want to start charging the user since the first intentional ignition of the engine during his 
reservation


* [RA3] This requirement is needed to solve the following problems:
the user may decide to not enter in the car, or the user may decide to enter in the car 
without inserting his/her personal PIN (and so the engine can’t ignite).
In the latter case, the user can potentially occupy the reserved car for days without 
paying anything.
We think that 20 minutes is a reasonable time. In fact we don’t want to damage users 
which may take more time to turn on the engine, for example if they’ve made a stop 
in order to charge something in the car trunk.


* [RA4] This requirement is necessary in order to keep updated the number of available parking slots in a safe area and to avoid the termination of a ride in a safe area which it’s already fully occupied by cars of the company
        
* [RA5] Eventual reservation because a car can have failures also when it is still 
available inside a safe area, or if it has been reserved but
not picked up yet
        
* [RA6] This requirement may help the forgetful users which don’t turn off the engine 
of the car after the ride, but may also help the company to save money, since 
the engine is not left on uselessly for no reasons.


* [RA7] We think that it’s reasonable not to allow a car stop inside a safe area, 
otherwise a user can occupy with his reserved car a free parking slot in a safe area and this 
action may not let another user use that parking slot to terminate his reservation


* [RA8] 
-This requirement is listed under this goal since we think that the company 
wants to avoid this situation: if multiple people who know each other want to 
go to together to the same place using the cars of the company, it is better if 
they share the same car as much as possible instead of going in the same 
place with multiple cars. Otherwise our company will find multiple cars arriving in very near safe areas and this situation will be harmful since it may go against the goal G3. 
-With the 50% time constraint, we want to avoid that the user fools the system by picking up 
two passengers and making them exit the car immediately after.


* [RA9] With this requirement we want to help the user and the company. The user 
will be less likely to find himself riding a car with no battery, since 
probably he will find a safe area where to leave the car soon after that
notification is received. The company can save money since maybe the car 
will be left by the user to a power grid station to recharge and we may avoid
damages on the car battery on long terms, since Li-ion batteries suffer when
completely discarged.


SCENARIOS
The following scenarios are a description of imagined sequences of events that include the interaction of the S2B with its environment and users, as well as the interaction among its components. Scenarios are useful to derive abstract use cases, which can then help to identify requirements that may have not been formally specified by any of the stakeholders. 


SCENARIO 1: REGISTRATION
Alonso doesn’t like the public transportation, he thinks that those vehicles are too slow to move in the city. A friend told him that a new car-sharing service called PowerEnjoy is available in the town, so Alonso decides to go on the app store and download the PowerEnjoy mobile app. Alonso opens the PowerEnjoy app. He presses the button “Register” and the registration procedure starts. Alonso fills correctly the registration form with his personal data, he provides a valid credit card, he accepts the “License agreement contract for PowerEnjoy” and presses the button “Complete” to end the registration procedure. The registration procedure completes correctly and Alonso receives an email with a PIN to use the cars with PowerEnjoy.




SCENARIO 2: LOGIN, RESERVATION AND CAR UNLOCK
Alicia lives in the suburbs of the city and has just known from a close friend that her favourite dress shop Dressando in the center of the city offers special discounts for that day only. Unfortunately, it’s raining and the car used by her family is in that moment used by her mother at work, so she decides that it’s the time to try the PowerEnjoy service instead of walking, to exploit the Dressando special discount. Alicia has registered correctly to PowerEnjoy two days ago. Alicia opens the PowerEnjoy app on her smartphone. She inserts correctly her email and password and presses the button “Login”. After the successfull login Alicia is redirected to a menu activity. Alicia presses the button “Find available cars”, she is redirected to a map activity showing the available PowerEnjoy cars. Alicia locates an available car near her house. She selects the car in the map. A dialog pops up and she presses the button “Reserve”. She goes out and when she is 1 meter near the reserved car, she presses the button “Unlock reserved car”. The system unlocks the car and Alicia enters in the car.




SCENARIO 3: GROUP TRIP
Aldo, Giovanni and Giacomo will have a very demanding day on the 26 of October. They are vegetarians and to pass some time together they booked long time before at “Gnam Veggy”, the best veggie burger restaurant of the city, for the 17:00 of the 26 of October. 
On the 26 of October, unfortunately, a strike of the metro transportation and of the surface trams has been planned, but the three friends don’t know about this.
At 16:20 of the 26 of October, Aldo discovers about the strike and since he knows that a strike should not be underestimated, he proposes to his friends to use PowerEnjoy and reserve a car. He also knows that if he’ll drive and at least two other passengers are going with him, they’ll receive a discount of 10% on their ride. The discount is enough to make Giovanni and Giacomo to agree. Aldo opens the PowerEnjoy mobile application and successfully logs in. He lives in the city in “Via Garibaldi 23”, so he inputs his location in the field on the top of the map of the city and identifies an available car in the neighborhood with 90% of the battery. He selects the car and reserves it.
At 16:40, the three friends are near the reserved car, Aldo unlocks the vehicle and they go in. They ride to the burger restaurant. The ride lasted 20 minutes and they find a safe area 
near the burger restaurant. The car has now the 70% of the battery left. Aldo presses the button “Terminate reservation” on the display and the three exit properly from the car. After 30 seconds, the system locks the car and the car is set as available again by the system. After the ride, Also receives a notification will the details about the ride: the normal price for that ride and the discounts applied: 10% for having took during the ride at least 2 other passengers and 20% more for having left the car in a safe area with more than 50% of the battery left.


Scenario 4: car left  with no more than 50% of the battery empty
Bill, that is already registered to PowerEnJoy, needs to cover a short distance by car. He logs to the PowerEnJoy application on his smartphone and selects the “Find available cars” button; he then reserves the available car that is closest to him. Within one hour from the reservation, Bill goes on the chosen location and through the application on his smartphone informs the system that he is nearby by clicking on the dedicated button “Unlock reserved car” and inserting his personal PIN code. The car unlocks itself within 30 seconds and he enters. He immediately turns on the engine and the system starts charging him for a given amount of money.
After covering a short distance, Bill finds a safe area for parking and exits properly from the car. After a while, the system automatically locks the car. After a short time, the user receives a notification from the PowerEnJoy application, where he is informed that he received a 20% discount on his last ride, because he left his car with less than 50% of the battery empty.


Scenario 5: user with unvirtuous behavior
Mike has to go to a concert in the city and decides to use PowerEnJoy to reach his destination; he is registered to the system. About an hour before the time he wants to leave, he logs to PowerEnJoy and reserves a car that is close to where he lives. He doesn’t use the money saving option, as he doesn’t like to travel by feet, so he always parks the car as close to his destination as possible.
When the time comes, he reaches the location and he clicks on the “Unlock reserved car” button and enters the car. Mike doesn’t like to travel with other passengers, so he doesn’t pick up anyone onto the car during his ride.
The concert holds far away from where Mike lives, so when he reaches the destination the car has more than 80% of the battery empty. There are no special parking areas with power grid stations nearby, so he parks the electric car in the safe area that is closest to the concert and presses the button “Terminate reservation”. He exits properly from the car and receives a notification telling him informations about the last ride: the normal price for the ride and that he is charged 30% more than the specified price on his ride, because he left the car with more than 80% of the battery empty and he did not get any discount because he did not try to act in a virtuous way.


Scenario 6: missed reservation
John is a regular employee in a business company and after a long day of work he
is finally close to going back home. While checking the last reports, his friend Paul reminds
him about the national strike of the public transport occurring that day: John, who has 
already tried the PowerEnjoy services a couple of times, decides to login using the PowerEnjoy application, he presses the “Find available cars” button and when the map activity is completely loaded, he locates an available car near his office address and reserves it by pressing the button “Reserve”. Fifteen minutes later, John's colleague Mary offers him a ride back home: John, who has always had a crush on Mary, cannot refuse and accepts enthusiastically. On the way back home with Mary, John suddenly remembers of his missed reservation: he checks his profile smarthphone and he sees that the PowerEnjoy app has notified him about a little fee of 1 EUR for the missed reservation.
A trivial cost for being able to talk with Mary on the way home.


Scenario 7: saving money option
Lorenzo is a student of Politecnico of Milan but, unfortunately, he has having quite 
a struggle in succeeding in the exams. Since his parents are becoming tired of economically
supporting him, Lorenzo is trying to sparing some of his monthly budget.
After finding out about the Money Saving Option offered by PowerEnjoy, Lorenzo, already a  registered user, decides to give it a try.
Lorenzo starts up the PowerEnjoy app on his smartphone; from the menu of the main screen of the app he selects the button for the login and inserts his credentials; once logged in, he uses the function for finding an available car from his current position and he reserves it. Ten minutes later, Lorenzo is close to the car: using the PowerEnjoy app, Lorenzo unlocks the car by selecting the corresponding “Unlock reserved car “ option on the menu; once in the vehicle, Lorenzo checks the “Saving money option” showed on the screen: he then enters his destination, the home of his physics tutor, and the closest safe area to the inserted destination is shown to him; Lorenzo accepts it by pressing a button on the screen and inserts his personal PIN to ignite the vehicle’s engine.
After his journey, Lorenzo parks in the defined safe area; he then press the option “Conclude your rental” “Terminate reservation” on the car’s screen and exits properly from the car. 
A few minutes later Lorenzo is notified via app about the charged price and the applied discount. Lorenzo can now travel through the city without the worry of spending too much money, thus focusing more on his studies.


Scenario 8: plugging the car
Thomas loves going to the cinema. Tonight, Thomas wants to watch an interesting action movie that he heard of from a friend: as a registered user of PowerEnjoy, he logs into the system selecting the related option “Login” in the PowerEnjoy app; he selects the option “Find available cars” for locating a car and looks on the map for a car near his home address; he finds one and he selects it and then he presses the button “Reserve”.
After thirty minutes from his reservation, Thomas arrives at 5 meters from the reserved car: when he presses the button “Unlock reserved car”, his GPS position is sent to the system via the PowerEnjoy app and the system after more or less 30 seconds unlocks that car. Thomas enters the car, inserts his personal PIN on the screen of the car and ignites the engine of the car. After his journey, Thomas parks the car in one of the power safe areas in the city area. Thomas remembers that he has not chosen the “Money Saving Option” before inserting his PIN and notices that the car has 40% of battery left: after selecting the “Conclude your rental” “Terminate reservation” option on the screen of the car and exiting properly from the car, he decides to plug the car into one power plug of the power grid of that power safe area. While entering the cinema, Thomas gets a notification from the PowerEnjoy app: he obtained a 30% discount on the last ride. Happy for his reward, now Thomas can now enjoy better the movie.


UML MODELS


USE CASES 
The followings are relevant use cases for our S2B. Depending on the interest found in highlighting the interactions in a use case, a sequence diagram and/or a use case diagram may be provided.


Use case: GuestRegistration 
Goal: [G1]
Actors: Guest, BillingService
Entry Condition:  none
Flow of events: 
* The Guest opens the main activity of the PowerEnjoy mobile application
* The Guest touches the “Register” button to start the registration process
* The system replies by sending the registration form to the Guest
* The Guest fills the form with all his credentials, personal data, payment informations. He reads the “PowerEnjoy license agreement” and highlights the option to accept the license agreement. Then he touches the “Confirm” button. All the data are sent to the system.
* The system checks the form completeness
* The system has verified the form completeness
* The system verifies the Guest credentials and personal data.
* The system has verified the correctness of user credentials and asks payment validation to the BillingService
* The BillingService answers to the system that the payment informations are valid.
* The system confirms the registration by sending a confirmation message to the Guest
* The system sends an email with the unique PIN generated for the new User
Exit conditions:  
* The Guest is now a User. The User is redirected
*  by the system again on the main activity.
* The system adds an entry in the user’s database for the new User
Exceptions:
* The Guest has provided an email already used by another User : the system notifies the Guest User to use another email 
* The Guest is not at least 18 years old: the system notifies the Guest about this constraint on the use of the service
* The Guest has not filled all the data requested in the form: the system notifies on what is missing
* The Guest has provided invalid payment informations: the system notifies to insert that data again


Use case: UserLogsIn 
Goal: [G1]
Actors: User
Preconditions: User is registered to PowerEnjoy
Flow of events: 
* The User opens the main activity of the PowerEnjoy mobile application
* The User inserts his email and password and touches the button “Login”. When the button “Login” is pressed, the informations inserted are sent to the system
* The system verifies the correctness of the email and password of the User
* The system has verified that the credentials of the User are correct and sends a confirmation message to the User
Exit conditions: 
The User is logged into the PowerEnJoy system and he is redirected by the system to the menu activity.
Exceptions: 
* The email and/or password of the User are wrong, the system sends a message to the User to try again


Use case: UserFindsAvailableCars 
Goal: [G1]
Actors: User, Car(s), MapsService
Entry condition: “UserLogsIn”
Flow of events: 
* The User presses the button “Find Available Cars” in the menu activity. When the button is pressed, the GPS position of the User is sent to the system.
* The system controls if the GPS user location is inside the city area
* The system validates the GPS location of the User.
* The system researches the GPS position of every available Car in the city and queries every available Car for its data (battery level and location in particular). The system sends these data to the User.
* The system requests a map view to the MapsService and redirects the User to a map activity where the map is displayed.
* The GPS coordinates of every available car are shown on a map on the screen of the User.
Exit conditions:
The User can now touch the image of a car inside the map view and if this happens the use case “UserReservesCar” is invoked.


Exceptions:
The GPS location of the User is outside the city area: the system notifies the User to go inside the city area to find available cars. The User is not redirected to the map activity.


Use case: UserReservesCar 
Goal: [G1]
Actors: User, Car
Entry condition: “UserFindsAvailableCars”
Flow of events:
* The User is inside the map activity and presses on a car icon inside the map activity
* A popup dialog is shown to the User showing the address of the city in which the car is, the car battery level and its license plate. All the informations are based on the informations the User has received when the map activity was started. The dialog shows also a button “Reserve”
* The User presses the button “Reserve”. All the informations are sent to the system.
* The system checks if the User has already done a reservation of a car which is not terminated yet
* The system checks if the chosen car is reserved or not
* The system queries the chosen Car to see if it is really available at the specified position
* The system saves the reservation of the User for the chosen car starting from the reservation request time
Exit conditions:
The system notifies the User about the success of the reservation procedure indicating also the time when we reservation will expire if the car will not be picked-up.
Exceptions:
* The User has already done a reservation of a car which is not terminated yet: the system notifies the User that he can reserve another car only when the other reservation will be terminated (either with normal usage of the reserved car or for the expiring of the reservation after a missed pick-up after 1 hour from the reservation time)
* The User cannot complete the reservation since during the reservation procedure, another User has managed to reserve the chosen car before our User: the system notifies the User of being too late and notifies him to find another available car
* The User waits too much time and when he presses on the car, the system notifies the User that the chosen car is no more there. The system redirects the User to the menu activity so he can invoke again the “UserFindsAvailableCars” use case.


Use case: CarUnlocking 
Goal: [G2]
Actors: User, Car
Entry condition: “UserReservesCar” use case
Flow of events: 
The User selects the “Unlock your car” button on the menu activity of the PowerEnJoy mobile application
The system verifies that a reservation actually exists and, if this is the first unlocking, that at most 1 hour has passed from the User’s reservation 
The system verification is successful 
The User inserts his personal PIN code on the form that appears on the mobile application and confirms it by pressing “Ok”
The system verifies the correct correspondence between the PIN code inserted and the user that reserved the car
The system takes the User’s GPS location from the User’s mobile phone
The system requests the reserved car’s GPS location to the Car 
The Car provides its current GPS location
The system verifies that the User’s GPS location is at most 10 m distant to the reserved car’s GPS location
Exit conditions:  
The distance verification is successful and the car unlocks automatically within 30 seconds
Exceptions: 
The User has done no reservation; an error message is displayed on screen of the mobile phone of the User
More than 1 hour has passed from the reservation to the first unlocking request; the “MissedReservation” use case is invoked
The PIN code inserted by the User is incorrect; the system shows an error message on the mobile application and asks the User to try again
The control of the distance between the car and the User fails; the failure is communicated via notification on the PowerEnJoy app and the User can try again


Use case: EngineIgnition
Goal: [G2]
Actors: User, Car
Entry condition: “CarUnlocking” use case
Flow of events:
The User enters his reserved and unlocked car
The User turns the car’s key
The system verifies that at most 20 minutes have passed from the last unlocking of the car
The verification is successful
The system verifies if the event of the engine ignition is the first one during this reservation
Exit conditions:
The engine ignites; if  the event of the engine ignition is the first one during this reservation, the system starts charging the user for the established amount of money.
Exceptions: 
More than 20 minutes have passed from the last unlocking of the car; the car is set to unavailable and the last non terminated reservation is ended automatically


Use case: SetCarToAvailable
Goal: [G2]
Actors: Car
Entry condition: “LockTheCarAutomatically” use case
Flow of events:
The system, using the vehicle software interface, queries the battery sensor of the Car about the remaining charge in the battery array of the Car
The Car provides the remaining battery percentage to the system
The system verifies that the Car’s battery is at most 80% empty
The system asks the Car’s damage sensor if the Car has some damages
The Car’s damage sensor tells the system that the Car has no damage
Exit conditions
The Car is set as available by the system, so that another User can reserve it
Exceptions: 
The Car’s battery is more than 80% empty or some other Car failure has occurred; the system sets the Car to unavailable.


Use case: OperatorFixesCar
Goal: [G2]
Actors: Operator, Car
Entry condition: the Car status has been set as unavailable (some Car failure has occurred); the Operator is already logged to the system using the PowerEnJoy mobile web application
Flow of events:
The Operator visualizes all the unavailable cars on the city map
The Operator clicks on an unavailable car and visualizes its problem (kind of failure that has occurred) and the car’s info
The Operator sets the unavailable car as under maintenance by clicking on the dedicated button
The system verifies that the Operator has no other cars under his maintenance at the moment
The verification is successful and the system confirms the Operator’s choice
The Operator goes on-site and fixes the Car (by charging it through a portable electric car charger or by fixing the failure and by moving the Car in a safe area if necessary)
Exit conditions: 
When the Car is fixed, the Operator sets the Car back to available through the mobile application
Exceptions: 
The Operator had another car under his maintenance when making the maintenance request; the system shows an error message and leaves the selected Car as unavailable.



Use case: ConcludeRental
Goal: [G2]
Actors: User, Car
Entry conditions: the User has logged into the system, localized and reserved a car. He has then picked up the car within 1 hour from his reservation, and finally has concluded his journey by parking the car in a safe area or in a power safe area
Flow of events: 
* The User presses on the car on-board screen the option “Terminate reservation”
* The system, using the vehicle software interface, asks the Car’s GPS the current location of the Car.
* The Car’s GPS provides the required information to the system.
* The system confirms that the received coordinates corresponds to one of the known safe areas (maximum 10 meters from the related coordinates???) and that there is at least one available parking slot in that safe area
* The system confirms the end of the rental on the Car on-board screen.
* The system registers that there is one less available parking slot in that safe area
Exit conditions: 
After the proper exit of the User, the system proceedes to lock the Car, the use case “LockTheCarAutomatically” is invoked.
Exceptions: 
The system can’t find a correspondence between the coordinates of the Car and the coordinates of any safe area or detects that there are no parking slots available in that safe area. The system notifies the User through the Car on-board screen that his rental cannot end until he reaches another safe area.


Use case: LockTheCarAutomatically
Goal: [G2]
Actors: User, Car
Entry Conditions: The User has decided to conclude his rental (use case “ConcludeRental”) or to “Make a Stop”. The User has exited the Car.
Flow of events:
* The system, using the vehicle software interface, asks the Car’s sensors if the car doors, the windows and the trunk are closed.
* The Car’s sensor tells the system that the doors, the windows and the trunk are closed.
* The system requests the Car lock.
* The Car locks down within 30 seconds
* The system stops charging the User.
Exit conditions: 
The system proceeds with the evaluation of the User’s bill, “PayLastRide” use case is invoked.
Then the use case “SetCarToAvailable” is invoked
Exceptions:
The Car’s door sensor tells the system that some car door, some windows or the trunk aren’t closed; the Car status is set to unavailable.


Use case: PassengersDiscount
Goal: [G3]
Actors: User, Car
Entry condition: “EngineIgnition” use case; the engine is turned on
Flow of events: 
During the ride, the system asks the Car’s passenger sensors about the number of passengers in the Car
The Car’s passenger sensors provide the number of passengers in the Car 
The User decides to terminate his ride by pressing on the button on the car’s screen (“ConcludeRental” use case)
The system verifies that at least two other passengers were in the Car for at least 50% of the total time of the ride
The verification is successful
Exit conditions: 
A discount of 10% on the User’s bill is registered.
Exceptions: 
The system establishes that there weren’t at least two other passengers in the Car for at least 50% of the total time of the ride and the discount is not applied.


Use case: MoneySavingOption
Goal: [G3]
Actors: User, Car
Entry condition: “EngineUnlocking” use case
Flow of events: 
The User selects the “Money Saving Option” by pressing a button on the Car’s screen
The User inserts his destination address in the form that appears on the Car’s screen
The system shows a map on the Car’s screen with the location of the safe area or power safe area that is closest to the destination inserted, that allows the User to get a discount and that helps to reach a uniform distribution of the cars in the city area
During the ride, the system monitors the status of the shown safe area (number of parking slots that are available) and finds and shows a different safe area (repeating the previous point of the flow) on the Car’s screen if there are no more parking slots left in the originally found safe area
Exit conditions: 
The User can park his car in the safe area or power safe area located by the system in order to get a discount at the end of the ride
Exceptions: 
The destination address inserted in not valid; the system shows a message on the Car screen saying to insert a valid address.




Use case: PayLastRide 
Goal: [G4]
Actors: BillingService
Entry condition: 
After the login (“UserLogsIn” use case) the User has localized (“UserFindsAvailableCars” use case) and reserved a car (“UserReservesCar” use cases). The User has unlocked the car (“CarUnlocking” use case). The User has driven the reserved car and parked it in a safe area, requesting the end of the rental (“ConcludeRental” use case). The User has exited the car. The system has handled the car’s lock (“LockTheCarAutomatically” use case). 
Flow of events: 
* The system evaluates the total minutes of the User’s last ride.
* The system, based on the previous evaluated minutes, calculates the User’s bill value.
* The system evaluates possible discounts and penalties, starting from the discount due to the remaining battery (“GetBatteryDiscount” use case). (passengers discount excluded)
* If in “PassengersDiscount” use case the system established that the passengers discount has to be applied, a further discount of 10% on the User’s bill is applied
* The system interacts with the BillingService in order to account the payment to the User.
Exit conditions:        
The system notifies the User about the bill of the last ride, including eventual discounts and penalties applied.
Exceptions:
The systems is notified that the payment was not successful. The system blocks the User. (da aggiungere il requirement relativo a questo)


Use case: GetBatteryDiscount
Goal: [G4]
Actor: Car
Entry condition:
The system has evaluated the bill of the User’s last ride (“PayLastRide” use case).
Flow of events:
* The system, using the vehicle software interface, asks the Car’s battery array sensor about the remaining charge.
* The Car’s battery array sensor provides the remaining battery array percentage to the system.
Exit conditions:        
The remaining battery in the battery array has more than 50% of the capacity and the system registers a 20% discount on the original calculated bill. The system evaluates a second possible discount (“PlugCarAndGetDiscount” use case)
Exceptions:
The remaining battery in the battery array is less than 50% of the full capacity and so no discount is applied to the User.


Use case: PlugCarAndGetDiscount
Goal: [G4]
Actors: User, Car
Entry condition: 
The system has evaluated the remaining battery percentage in the battery array in order to apply the related discount (“GetBatteryDiscount” use case)
Flow of events:
* The User plugs the Car using a power plug in a power safe area within 30 seconds after the locking of the Car???
* The system, using the vehicle software interface, asks the Car’s sensor if the Car is recharging.
* The Car’s sensor tells the system that the Car is recharging.
Exit conditions:        
The system calculates a 30% discount on the original calculated bill and adds any eventual previous calculated discounts (“GetBatteryDiscount” use case). The system proceeds to evaluate a possible penalty for the User (“ParkFarFromGrid” use case)
Exceptions:
The User does not plug the Car into a power grid within 30 seconds after the lock of the car, the battery is not recharging and the system doesn’t apply any discount.


UseCase: ParkFarFromGrid
Goal: [G4]
Actors: Car
Preconditions: 
The system has evaluated if the Car was recharging in order to apply the related discount ( “PlugCarAndGetDiscount” use case)
Flow of events:
* The system asks through the vehicle software interface the Car’s position, as detected by the Car’s GPS.
* The Car’s GPS provides the GPS coordinate
* The system evaluates that the Car is more than 3 KM from the nearest power safe area.
Exit conditions:        
The system charges 30% more on the last ride, still considering eventual previous discount (“GetBatteryDiscount” use case,  “PlugCarAndGetDiscount” use case) to be applied on the original bill.
Exceptions:
The system evaluates that the Car is less than 3 KM from the nearest power safe area and no penalty is applied. The system checks for the battery status (“LeaveLowBattery” use case).


Use case: LeaveLowBattery
Goal: [G4]
Actors: Car
Preconditions: 
The system has evaluated that the Car was far no more than 3 KM from the nearest power safe area (“ParkFarFromGrid” use case)
Flow of events:
* The system, using the vehicle software interface, asks the remaining charge in the Car detected by the Car’s battery array sensor.
* The Car’s battery array sensor provides the remaining battery percentage to the system through the software interface.
Exit conditions:        
The remaining battery in the battery array is less than 20% of the full capacity and the system registers a 30% charge on the last ride, that will be subtracted to any eventual previous discount (“GetBatteryDiscount” use case, “PlugCarAndGetDiscount” use case) on the original calculated bill. 
Exceptions:
The remaining battery in the battery array is more than 20% of the full capacity and no extra charge on the last ride is applied to the User


Use Case: MissedReservation
Goal: [G4]
Actors: User, Payment service
Preconditions: The user has logged into the system (G1, UC?), located and reserved a car (G1, UC?). 
Flow of events: 
1. The user does not pick up the reserved car within 1 hour from his reservation
2. The system interacts with an external payment service and charge the user a fee of 1 EUR
3. The system notifies the user about the missed reservation and the consequent fee.
Exit conditions: The car that the user reserved, still fully functional, is now tagged as available, and other users can reserve it.
Exceptions: The users picks up the car in time and no fee is applied. The user does not have the requested money and the system, notified by the payment service, blocks his profile.


STATECHART
The following is a statechart showing how we designed the evolution of the status of a car of the company


NON FUNCTIONAL REQUIREMENTS
* PERFORMANCE REQUIREMENTS
        The system should support the requests and the interaction with a number of terminals which         is partially static: the number of cars in the fleet of the company may not vary too much from 
        its initial estimation since our customer has already bought the cars; and partially dynamic: 
the number of devices accessing our web application will probably grow with 
the diffusion of the car sharing service in the city and also if a web browser version for our web application will be built in the future. We will have to develop a scalable system which can prioritize the interaction and communication with the main good for our customer, the cars, when the system will be subject to high loads. 


* DESIGN CONSTRAINTS
        The main design constraints and related non functional requirements will probably come from 
the interaction of our system with the cars. This design constraints will be treated in more
details in the DD.


* SOFTWARE SYSTEM ATTRIBUTES
   1. RELIABILITY
        
   1. AVAILABILITY
        
   1. SECURITY


   1. MAINTAINABILITY
In order to obtain a maintainable S2B, the future application code will be documented
as much as possible, to help the maintainers of the system and potential new developers that may become active in the development of the system.


   1. PORTABILITY
        The S2B should run on many different platforms: Android, iOS and in future maybe on 
a web browser


TRACEABILITY MATRIX