Size Estimation: Function Points
The Function Points approach provides an estimation of the size of a project
considering the amount of functionalities to be developed and their
complexity. This approach, according to the COCOMO II Manual, is based on the definition of the User Function Types (EI, EO, ILF, EIF, EQ) and follows this high level schema:
1. Count functionalities in every User Function Type
2. Determine Complexity Levels
3. Calculate Complexity Weights
4. Calculate UFP and relate them to a SLOC number
In the next sections we will mainly follow the above mentioned schema.


Internal Logical Files
An internal logical file represents a set of data of the same type that is handled (generated and used) by the software system.
Based on the Database Layer description in the DD document we’ve identified:
* User
* RegisteredUser
* Operator
* Reservation
* Car
* Status
* SafeArea
* PowerSafeArea


External Interface Files
An external interface file represents data which is used by the system but generated by external applications or services. For our system we’ve identified:
* Maps Service: Google Maps
* BillingService: Stripe
* Vehicle Interface


External Inputs
An external input is an elementary operation that elaborates the data entering the external boundaries of the system. For our system we’ve identified:
* User registration
* User login
* PIN insertion
* Request Car reservation
* Terminate Car reservation
* Make a Stop during a Car reservation
* Enable Money Saving Option
* Request Car Maintenance
* Change Car Status




External Outputs
An external output is an elementary operation that produces the data that leave the external boundaries of the system. For our system we’ve identified:
* Send an unlock/lock command to a PowerEnjoy car
* Send payment notification


External Inquiry
An external inquiry is an elementary operation regarding both input and output, without significant elaboration of data from logic files. For our system we’ve identified:
* Find available cars by GPS position or address
* Find unavailable cars


Complexity Levels


ILF/ELF
	

	Data Elements
	

	Record Elements
	1-19
	20-50
	51+
	1
	Low
	Low
	Avg
	2-5
	Low 
	Avg
	High
	6+
	Avg
	High
	High
	

EO/EQ
	

	Data Elements
	

	Record Elements
	1-5
	6-19
	20+
	0 or 1
	Low
	Low
	Avg
	2-3
	Low 
	Avg
	High
	4+
	Avg
	High
	High
	

EI
	

	Data Elements
	

	Record Elements
	1-4
	5-15
	16+
	0 or 1
	Low
	Low
	Avg
	2-3
	Low 
	Avg
	High
	3+
	Avg
	High
	High
	







Internal Logical Files (ILFs)


Functions
	Complexity
	User
	Average
	RegisteredUser
	High
	Operator
	Average
	Reservation
	High
	Car
	High
	Status
	Low
	Safe Area
	High
	Power Safe Area
	High
	

External Interface Files (EIFs)


Functions
	Complexity
	Maps Service
	High
	BillingService
	High
	VehicleInterface
	High
	

External Inputs (EIs)


Functions
	Complexity
	User registration
	Average
	User login
	Average
	PIN insertion
	Low
	Request Car reservation
	High
	Terminate Car reservation
	High
	Make a Stop during a Car reservation
	High
	Enable Money Saving Option
	Average
	Request Car Maintenance
	High
	Change Car Availability Status
	Average
	

External Inquiries (EQs)


Functions
	Complexity
	Find available cars by GPS position or address
	High
	Find unavailable cars
	High
	

External Outputs (EOs)


Functions
	Complexity
	Send an unlock/lock command to a PowerEnjoy car
	Average
	Send payment notification
	Low
	

Complexity Weights


	

	Complexity-Weight
	

	Function Type
	Low
	Average
	High
	Internal Logical Files
	7
	10
	15
	External Interfaces Files
	5
	7
	10
	External Inputs
	3
	4
	6
	External Outputs
	4
	5
	7
	External Inquiries
	3
	4
	6
	



Internal Logical Files (ILFs) Complexity Weights


Functions
	Complexity
	FP
	User
	Average
	10
	RegisteredUser
	High
	15
	Operator
	Average
	10
	Reservation
	High
	15
	Car
	High
	15
	Status
	Low
	7
	Safe Area
	High
	15
	Power Safe Area
	High
	15
	Total
	102
	

External Interface Files (EIFs) Complexity Weights


Functions
	Complexity
	FP
	Maps Service
	High
	10
	BillingService
	High
	10
	VehicleInterface
	High
	10
	Total
	30
	

External Inputs (EIs) Complexity Weights


Functions
	Complexity
	FP
	User registration
	Average
	4
	User login
	Average
	4
	PIN insertion
	Low
	3
	Request Car reservation
	High
	6
	Terminate Car reservation
	High
	6
	Make a Stop during a Car reservation
	High
	6
	Enable Money Saving Option
	Average
	4
	Request Car Maintenance
	High
	6
	Change Car Availability Status
	Average
	4


	Total
	

	43
	



External Inquiries (EQs) Complexity Weights


Functions
	Complexity
	FP
	Find available cars by GPS position or address
	High
	6
	Find unavailable cars
	High
	6
	Total
	12
	

External Outputs (EOs) Complexity Weights


Functions
	Complexity
	FP
	Send an unlock/lock command to a PowerEnjoy car
	Average
	5
	Send payment notification
	Low
	4
	Total
	9
	



Overall Estimation: Relating UFPs to SLOC
The following table summarizes the computation of the UFPs for our system.


User Function Type
	UFP
	Internal Logical Files
	102
	External Interface Files
	30
	External Inputs
	43
	External Inquiries
	12
	External Outputs
	9
	Total
	196
	

The total count of UFPs calculated above is here converted in lines of code. The  Considering JEE 7 as the main development platform and according to the “UFP to SLOC conversion Ratios” (see Reference Documents), the average number of LOCs per UFP for JEE 7 is 46, so:


SLOC = 46 * UFP = 9016


Cost and effort estimation: COCOMO II
In this section the COCOMO II approach will be used to estimate the cost and effort required to develop the PowerEnjoy system.


Scale Drivers
Each scale factor has a range of rating levels: from Very Low to Extra High. In order to evaluate the values of the scale drivers, we will then refer to the COCOMO II manual.


* Precedentedness (PREC): it reflects the amount of previous experience that the team has with the development of large scale projects. Since we are not field experts and most of the concepts used for this project are largely new to us, this value will be Low.
* Development flexibility (FLEX): it describes the amount of flexibility we have in the development process. The process has followed quite strictly a Waterfall lifecycle model and the document deadlines were fixed from the beginning. However, since we were free to use specific frameworks and devices to implement the system, this value will be Nominal.
* Architecture / Risk Resolution (RESL): it describes the level of awareness and details of the risk analysis performed. Since we will provide a general but also quite extensive risk analysis in a dedicated section of this document, this value will be set to High.
* Team Cohesion (TEAM): it takes into account the difficulties of synchronization of the stakeholders of the project, in particular it describes how well the team members can cooperate and interact with each other. Since our team has been highly cooperative, for us the value is Very High.
* Process Maturity (PMAT): it reflects the process maturity of the organization. Since we’ve followed a sets of defined and documented standard processes, but we think that the project goals have been successfully fulfilled, this value will be CMM Level 3 - Defined, which corresponds to High in the COCOMO II manual.


Scale Driver
	Factor
	Value
	Precedentness (PREC)
	Low
	4.96
	Development flexibility (FLEX)
	Nominal
	3.04
	Architecture / Risk Resolution (RESL)
	High
	2.83
	Team Cohesion (TEAM)
	Very High
	1.10
	Process Maturity (PMAT)
	High
	3.12
	Total sum of scale factors
	15.05
	



Cost Drivers
The Cost drivers are used to capture characteristics of the software development that affect
the effort to complete the project. Since we’re dealing with a Post-Architecture Analysis, these are the following cost drivers to consider:


Code
	Name
	Factor
	Value
	RELY
	Required Software Reliability
	High
	1.10
	DATA
	Database size 
	Nominal
	1
	CPLX
	Product Complexity 
	Nominal
	1
	RUSE
	Required Reusability 
	Low
	0.95
	DOCU
	Documentation match to life-cycle needs
	Nominal
	1
	TIME
	Execution Time Constraint 
	High
	1.11
	STOR
	Main Storage Constraint 
	High
	1.05
	PVOL
	Platform Volatility
	Nominal
	1
	ACAP
	Analyst Capability 
	Nominal
	1
	PCAP
	Programmer Capability 
	Nominal
	1
	APEX
	Application Experience 
	Very Low
	1.22
	PLEX
	Platform Experience 
	Very Low
	1.19
	LTEX
	Language and Tool Experience 
	Low
	1.09
	PCON
	Personnel Continuity 
	High
	0.90
	TOOL
	Usage of Software Tools 
	Nominal
	1
	SITE
	Multisite Development 
	High
	0.93
	SCED
	Required Development Schedule 
	High
	1
	Total
	EAF = product of all cost drivers
	

	1.613
	



Effort Equation
This equation is used to evaluate the effort required, measured in Person-Months:




Effort = A × EAF × (KSLOC)E
Where:
* A = 2.94, approximates a productivity constant in PM/KSLOC for COCOMO II
* EAF = 1.613, product of all cost drivers, as calculated above
* KSLOC = 9.016 , evaluated in the worst case.
* B = 0.91 for COCOMO II
* E = B + 0.01 x (sum of SF = 15.05) = 1.0605


The total effort is evaluated as 48.84 person-months, so we can approximate it to 49 person-months.


Schedule Estimation
The duration it will take to develop the system is estimated by the following formula:
Duration =


Where:
* PM = 73, as calculated above
* B = 0.91 for COCOMO II
* C = 3.67 for COCOMO II
* D = 0.28 for COCOMO II
* E = 1.0605, as calculated above
* F = D + 0.2*(E-B) = 0.3101


The duration calculated is 12.27 months, which can be approximated in the worst case to 13 months, which seems to be a reasonable estimate.